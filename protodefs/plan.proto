syntax = "proto3";
import "currencies.proto";
import "error.proto";

enum Interval {
    NotSet = 0;
    Day = 1;
    Week = 2;
    Month = 3;
    Year = 4;
}

message PlanResponse {
    oneof responses {
        Error error = 1;
        Plan success = 2;
    }
}

message Plan {
    string id = 1;
    uint64 amount = 2;
    int64 created = 3;
    Currency currency = 4;
    Interval interval = 5;
    uint64 interval_count = 6;
    bool livemode = 7;
    map<string, string> metadata = 8;
    string name = 9;
    string statement_descriptor = 10;
    uint64 trial_period_days = 11;
}

message CreatePlanRequest {
    string id = 1;
    uint64 amount = 2;
    Currency currency = 3;
    Interval interval = 4;
    string name = 5;
    uint64 interval_count = 6;
    map<string, string> metadata = 7;
    string statement_descriptor = 8;
    uint64 trial_period_days = 9; 
}

message GetPlanRequest {
    string id = 1;
}

message UpdatePlanRequest {
    string id = 1;
    map<string, string> metadata = 2;
    string name = 3;
    string statement_descriptor = 4;
    uint64 trial_period_days = 5;
}

message DeletePlanRequest {
    string id = 1;
}

message DeletePlanSuccess {
    bool deleted = 1;
    string id = 2;
}

message DeletePlanResponse {
    oneof responses {
        Error error = 1;
        DeletePlanSuccess success = 2;
    }
}

message ListFilter {
    int64 gt = 1;
    int64 gte = 2;
    int64 lt = 3;
    int64 lte = 4;
}

message ListPlansRequest {
    ListFilter created = 1;
    string ending_before = 2;
    string starting_after = 3;
    int32 limit = 4;
}

service Plans {
    rpc UpdatePlan(UpdatePlanRequest) returns (PlanResponse) {}
    rpc CreatePlan(CreatePlanRequest) returns (PlanResponse) {}
    rpc DeletePlan(DeletePlanRequest) returns (DeletePlanResponse) {}
    rpc GetPlan(GetPlanRequest) returns (PlanResponse) {}
    rpc ListPlans(ListPlansRequest) returns (stream PlanResponse) {}
}