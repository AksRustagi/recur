// Code generated by protoc-gen-go. DO NOT EDIT.
// source: error.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Error struct {
	Type           string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	ChargeId       string `protobuf:"bytes,2,opt,name=charge_id,json=chargeId" json:"charge_id,omitempty"`
	Message        string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	HttpStatusCode string `protobuf:"bytes,4,opt,name=http_status_code,json=httpStatusCode" json:"http_status_code,omitempty"`
	DeclineCode    string `protobuf:"bytes,5,opt,name=decline_code,json=declineCode" json:"decline_code,omitempty"`
	Param          string `protobuf:"bytes,6,opt,name=param" json:"param,omitempty"`
	RequestId      string `protobuf:"bytes,7,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Error) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Error) GetChargeId() string {
	if m != nil {
		return m.ChargeId
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) GetHttpStatusCode() string {
	if m != nil {
		return m.HttpStatusCode
	}
	return ""
}

func (m *Error) GetDeclineCode() string {
	if m != nil {
		return m.DeclineCode
	}
	return ""
}

func (m *Error) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

func (m *Error) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func init() {
	proto.RegisterType((*Error)(nil), "Error")
}

func init() { proto.RegisterFile("error.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8f, 0xbf, 0x0e, 0x82, 0x30,
	0x10, 0x87, 0x83, 0xf2, 0x47, 0x0e, 0x63, 0x4c, 0xe3, 0xd0, 0xc4, 0x98, 0xa8, 0x13, 0x93, 0x8b,
	0x8f, 0x60, 0x1c, 0x58, 0xf5, 0x01, 0x48, 0xa5, 0x17, 0x20, 0x11, 0x5b, 0xdb, 0x63, 0xf0, 0x3d,
	0x7d, 0x20, 0xc3, 0x81, 0x5b, 0x7f, 0xdf, 0xf7, 0x0d, 0x3d, 0xc8, 0xd0, 0x39, 0xe3, 0x4e, 0xd6,
	0x19, 0x32, 0xc7, 0x6f, 0x00, 0xd1, 0x75, 0xd8, 0x42, 0x40, 0x48, 0x1f, 0x8b, 0x32, 0xd8, 0x07,
	0x79, 0x7a, 0xe3, 0xb7, 0xd8, 0x42, 0x5a, 0x35, 0xca, 0xd5, 0x58, 0xb6, 0x5a, 0xce, 0x58, 0x2c,
	0x46, 0x50, 0x68, 0x21, 0x21, 0xe9, 0xd0, 0x7b, 0x55, 0xa3, 0x9c, 0xb3, 0xfa, 0x4f, 0x91, 0xc3,
	0xba, 0x21, 0xb2, 0xa5, 0x27, 0x45, 0xbd, 0x2f, 0x2b, 0xa3, 0x51, 0x86, 0x9c, 0xac, 0x06, 0x7e,
	0x67, 0x7c, 0x31, 0x1a, 0xc5, 0x01, 0x96, 0x1a, 0xab, 0x67, 0xfb, 0xc2, 0xb1, 0x8a, 0xb8, 0xca,
	0x26, 0xc6, 0xc9, 0x06, 0x22, 0xab, 0x9c, 0xea, 0x64, 0xcc, 0x6e, 0x1c, 0x62, 0x07, 0xe0, 0xf0,
	0xdd, 0xa3, 0xa7, 0xe1, 0x6b, 0x09, 0xab, 0x74, 0x22, 0x85, 0x7e, 0xc4, 0x7c, 0xdd, 0xf9, 0x17,
	0x00, 0x00, 0xff, 0xff, 0x29, 0x54, 0x9f, 0x87, 0xec, 0x00, 0x00, 0x00,
}
